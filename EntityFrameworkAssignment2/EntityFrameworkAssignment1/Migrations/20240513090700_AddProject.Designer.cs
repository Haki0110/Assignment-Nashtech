// <auto-generated />
using System;
using EntityFrameworkAssignment1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameworkAssignment1.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240513090700_AddProject")]
    partial class AddProject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityFrameworkAssignment1.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Software Development"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Accountant"
                        },
                        new
                        {
                            Id = 4,
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("EntityFrameworkAssignment1.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            JoinedDate = new DateTime(2024, 5, 13, 16, 6, 59, 835, DateTimeKind.Local).AddTicks(3174),
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            JoinedDate = new DateTime(2024, 5, 13, 16, 6, 59, 835, DateTimeKind.Local).AddTicks(3186),
                            Name = "Jane Smith"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 1,
                            JoinedDate = new DateTime(2024, 5, 13, 16, 6, 59, 835, DateTimeKind.Local).AddTicks(3188),
                            Name = "Michael Johnson"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 3,
                            JoinedDate = new DateTime(2024, 5, 13, 16, 6, 59, 835, DateTimeKind.Local).AddTicks(3189),
                            Name = "Emily Brown"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 2,
                            JoinedDate = new DateTime(2024, 5, 13, 16, 6, 59, 835, DateTimeKind.Local).AddTicks(3190),
                            Name = "David Wilson"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 1,
                            JoinedDate = new DateTime(2024, 5, 13, 16, 6, 59, 835, DateTimeKind.Local).AddTicks(3192),
                            Name = "Jessica Lee"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 4,
                            JoinedDate = new DateTime(2024, 5, 13, 16, 6, 59, 835, DateTimeKind.Local).AddTicks(3193),
                            Name = "Christopher Davis"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 3,
                            JoinedDate = new DateTime(2024, 5, 13, 16, 6, 59, 835, DateTimeKind.Local).AddTicks(3194),
                            Name = "Ashley Martinez"
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 2,
                            JoinedDate = new DateTime(2024, 5, 13, 16, 6, 59, 835, DateTimeKind.Local).AddTicks(3196),
                            Name = "Matthew Taylor"
                        },
                        new
                        {
                            Id = 10,
                            DepartmentId = 4,
                            JoinedDate = new DateTime(2024, 5, 13, 16, 6, 59, 835, DateTimeKind.Local).AddTicks(3197),
                            Name = "Amanda Harris"
                        });
                });

            modelBuilder.Entity("EntityFrameworkAssignment1.Model.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Project 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Project 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Project 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Project 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Project 5"
                        });
                });

            modelBuilder.Entity("EntityFrameworkAssignment1.Model.ProjectEmployee", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.HasKey("ProjectId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ProjectEmployees");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            EmployeeId = 1,
                            Enabled = true
                        },
                        new
                        {
                            ProjectId = 2,
                            EmployeeId = 2,
                            Enabled = true
                        },
                        new
                        {
                            ProjectId = 1,
                            EmployeeId = 3,
                            Enabled = true
                        },
                        new
                        {
                            ProjectId = 3,
                            EmployeeId = 4,
                            Enabled = true
                        },
                        new
                        {
                            ProjectId = 2,
                            EmployeeId = 5,
                            Enabled = true
                        },
                        new
                        {
                            ProjectId = 1,
                            EmployeeId = 6,
                            Enabled = true
                        },
                        new
                        {
                            ProjectId = 4,
                            EmployeeId = 7,
                            Enabled = true
                        },
                        new
                        {
                            ProjectId = 3,
                            EmployeeId = 8,
                            Enabled = true
                        },
                        new
                        {
                            ProjectId = 2,
                            EmployeeId = 9,
                            Enabled = true
                        },
                        new
                        {
                            ProjectId = 4,
                            EmployeeId = 10,
                            Enabled = true
                        });
                });

            modelBuilder.Entity("EntityFrameworkAssignment1.Model.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("EntityFrameworkAssignment1.Model.Employee", b =>
                {
                    b.HasOne("EntityFrameworkAssignment1.Model.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EntityFrameworkAssignment1.Model.ProjectEmployee", b =>
                {
                    b.HasOne("EntityFrameworkAssignment1.Model.Employee", "Employee")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkAssignment1.Model.Project", "Project")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EntityFrameworkAssignment1.Model.Salary", b =>
                {
                    b.HasOne("EntityFrameworkAssignment1.Model.Employee", "Employee")
                        .WithOne("Salary")
                        .HasForeignKey("EntityFrameworkAssignment1.Model.Salary", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EntityFrameworkAssignment1.Model.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EntityFrameworkAssignment1.Model.Employee", b =>
                {
                    b.Navigation("ProjectEmployees");

                    b.Navigation("Salary")
                        .IsRequired();
                });

            modelBuilder.Entity("EntityFrameworkAssignment1.Model.Project", b =>
                {
                    b.Navigation("ProjectEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
